{
  "$id": "https://railtoolkit.org/layer-model/DSR_cycles/3/schema/layer_model.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Railway Layer Model - 3. DSR cycle",
  "description":
    "The railway layer model is part of a PhD thesis. Copyright (c) 2018 - 2023, Martin Scheidt [m.scheidt@tu-bs.de] under the ISC License. This schema can be used to verify the YAML snippets for railway layer model. First cycle of DSR only includes the base layer",
  "type": "object",
  "anyOf": [
    {"required": [ "base" ] },
    {"required": [ "network" ] },
    {"required": [ "physical" ] }
  ],
  "$defs": {
    "id": {
      "type": "string",
      "description": "might be a UUID or something similar"
    },
    "line_position": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "line": { "type": "string" },
          "milage": { "type": "number" }
        },
        "required": [ "line", "milage" ]
      }
    },
    "length": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "description": "the physical distance between two nodes"
    },
    "base_reference": {
      "type": "string",
      "description": "ID of a station from base layer"
    },
    "network_reference": {
      "type": "string",
      "description": "ID of a station from network layer"
    },
    "direction": { 
      "type": "string",
      "enum": [ "forward", "backward", "bidirectional" ]
    }
  },
  "properties": {
    "base": {
      "title": "base layer",
      "type": "object",
      "description": "macroscopic connections & network access",
      "properties": {
        "name": { "type": "string" },
        "id": { "$ref": "#/$defs/id" },
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "$ref": "#/$defs/id" },
              "name": { "type": "string" },
              "plot_coord": {
                "type": "array",
                "items": {}
              },
              "geo_coord": {
                "type": "array",
                "items": {}
              },
              "pos": { "$ref": "#/$defs/line_position" }
            },
            "required": [
              "id",
              "name"
            ]
          }
        },
        "relations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "source": {
                "description": "$id of a station",
                "type": "string"
              },
              "target": {
                "description": "$id of a station",
                "type": "string"
              },
              "length": { "$ref": "#/$defs/length" }
            },
            "required": [
              "source",
              "target",
              "length"
            ]
          }
        },
        "lines": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "id": { "$ref": "#/$defs/id" }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "required": [ "locations" ]
    },
    "network": {
      "type": "object",
      "title": "The Network Layer",
      "description": "junctions, tracks & usage",
      "required": [ "nodes" ],
      "properties": {
        "name": { "type": "string" },
        "id": { "$ref": "#/$defs/id" },
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [ "id", "base_ref", "type" ],
            "properties": {
              "id": { "$ref": "#/$defs/id" },
              "base_ref": { "$ref": "#/$defs/base_reference" },
              "type": {
                "type": "string",
                "enum": [ "track", "junction" ]
              }
            },
            "allOf": [
              {
                "if": { "properties": { "type": { "const": "junction" } } },
                "then": {
                  "properties": {
                    "in": {
                      "description": "$id of a connection",
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "out": {
                      "description": "$id of a connection",
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "limits": {
                      "description": "$id of a sign/signal from Physical Layer",
                      "type": "array",
                      "items": { "type": "string" }
                    }
                  },
                  "required": [ "in", "out", "limits" ]
                }
              }
            ]      
          }
        },
        "connections": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [ "id", "source", "target" ],
            "properties": {
              "id": { "$ref": "#/$defs/id" },
              "source": {
                "description": "$id of a node",
                "type": "string"
              },
              "target": {
                "description": "$id of a node",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "physical": {
      "title": "physical layer",
      "type": "object",
      "description": "microscopic connections & topology",
      "properties": {
        "id": { "$ref": "#/$defs/id" },
        "elements": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [ "name", "class", "kind" ],
            "properties": {
              "name": { "type": "string" },
              "base_ref": { "$ref": "#/$defs/base_reference" },
              "network_ref": { "$ref": "#/$defs/network_reference" },
              "id": { "$ref": "#/$defs/id" },
              "pos": { "$ref": "#/$defs/line_position" },
              "class": { 
                "type": "string",
                "enum": [ "berth", "sign", "branching", "trap", "detector", "end" ]
              },
              "specimen": { "type": "string" }
            },
            "allOf": [
              {
                "if": {  "properties": { "class": { "const": "berth" } } },
                "then": {
                  "properties": {
                    "kind": { "type": "string", "enum": ["end platform", "end usable length"] },
                    "direction": { "$ref": "#/$defs/direction" }
                  }
                }
              }, {
                "if": { "properties": { "class": { "const": "sign" } } },
                "then": {
                  "properties": {
                    "kind": { "type": "string", "enum": ["board", "signal"] },
                    "direction": { "$ref": "#/$defs/direction" }
                  }
                }
              }, {
                "if": { "properties": { "class": { "const": "trap" } } },
                "then": {
                  "properties": {
                    "kind": { "type": "string", "enum": ["derailer", "points"] },
                    "direction": { "$ref": "#/$defs/direction" }
                  }
                }
              }, {
                "if": { "properties": { "class": { "const": "branching" } } },
                "then": {
                  "properties": {
                    "kind": { "type": "string", "enum": ["turnout", "slip turnout", "diamond crossing"] },
                    "branches": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "path" 
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "enum": [ "left", "right", "straight", "straight2" ]
                          },
                          "path": {
                            "type": "array",
                            "maxItems" : 2,
                            "minItems" : 2,
                            "items": {
                              "$ref": "#/$defs/id",
                              "description": "tracksection ID"
                            }
                          },
                          "speed": {
                            "type": "number",
                            "default": ".inf"
                          }
                        }
                      }
                    }
                  }
                }
              }, {
                "if": { "properties": { "class": { "const": "detector" } } },
                "then": {
                  "properties": {
                    "kind": { "type": "string", "enum": ["clearing point", "balise"] },
                    "direction": { "$ref": "#/$defs/direction" }
                  }
                }
              }, {
                "if": {  "properties": { "class": { "const": "end" } } },
                "then": {
                  "properties": {
                    "kind": { "type": "string", "enum": ["buffer stop", "continuing"] }
                  }
                }
              }
            ]
          }
        },
        "segments": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "id",
              "source",
              "target"
            ],
            "properties": {
              "name": { "type": "string" },
              "id": { "$ref": "#/$defs/id" },
              "length": { "$ref": "#/$defs/length" },
              "base_ref": { "$ref": "#/$defs/base_reference" },
              "source": {
                "$ref": "#/$defs/id",
                "description": "element ID"
              },
              "target": {
                "$ref": "#/$defs/id",
                "description": "element ID"
              }
            }
          }
        }
       }
    }
  }
}
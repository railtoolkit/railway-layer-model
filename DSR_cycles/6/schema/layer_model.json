{
  "$id": "https://railtoolkit.org/layer-model/DSR_cycles/6/schema/layer_model.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Railway Layer Model - 6. DSR cycle",
  "description":
    "The railway layer model is part of a PhD thesis. Copyright (c) 2018 - 2023, Martin Scheidt [m.scheidt@tu-bs.de] under the ISC License. This schema can be used to verify the YAML snippets for railway layer model. First cycle of DSR only includes the base layer",
  "type": "object",
  "anyOf": [
    {"required": [ "base" ] },
    {"required": [ "network" ] },
    {"required": [ "physical" ] },
    {"required": [ "speed" ] },
    {"required": [ "interlocking" ] },
    {"required": [ "resource" ] }
  ],
  "$defs": {
    "id": {
      "type": "string",
      "description": "might be a UUID or something similar"
    },
    "name": {
      "type": "string",
      "description": "a human readable string of an element, node, or object"
    },
    "switch_branches": {
      "type": "string",
      "enum": [ "left", "right", "straight", "straight2" ]
    },
    "mileage": {
      "type": "number",
      "default": 0,
      "description": "the mileage in kilometer; e.g. 0.050 are 50 meters"
    },
    "line_position": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "line": { "type": "string" },
          "mileage": { "$ref": "#/$defs/mileage" }
        },
        "required": [ "line", "mileage" ]
      }
    },
    "network_node": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [ "track", "limit" ],
        "properties": {
          "track": { "$ref": "#/$defs/resource_reference" },
          "limit": {
            "type": "object",
            "required": [ "name" ],
            "properties": {
              "name": { "type": "string" },
              "physical_ref": { "$ref": "#/$defs/physical_reference" }
            }
          }
        }
      }
    },
    "berth": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["physical_ref", "platform" ],
        "properties": {
          "name": { "type": "string" },
          "physical_ref": { "$ref": "#/$defs/physical_reference" },
          "platform": { "type": "boolean" }
        }
      }
    },
    "base_reference": {
      "type": "string",
      "description": "ID of a station from base layer"
    },
    "network_reference": {
      "type": "string",
      "description": "ID of a station from network layer"
    },
    "physical_reference": {
      "type": "string",
      "description": "ID of a element from physical layer"
    },
    "resource_reference": {
      "type": "string",
      "description": "ID of a element from resource layer"
    },
    "direction": { 
      "type": "string",
      "enum": [ "forward", "backward", "bidirectional" ]
    },
    "length": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "description": "the physical distance between two nodes"
    },
    "velocity": {
      "type": "number",
      "default": ".inf",
      "minimum": 0,
      "description": "maximum allowed velocity in km/h"
    }
  },
  "properties": {
    "base": {
      "title": "base layer",
      "type": "object",
      "description": "macroscopic connections & network access",
      "properties": {
        "name": { "type": "string" },
        "id": { "$ref": "#/$defs/id" },
        "required": [ "locations", "locations" ],
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": { "$ref": "#/$defs/id" },
              "name": { "type": "string" },
              "plot_coord": {
                "type": "array",
                "items": {}
              },
              "geo_coord": {
                "type": "array",
                "items": {}
              },
              "pos": { "$ref": "#/$defs/line_position" }
            },
            "required": [ "id", "name" ]
          }
        },
        "relations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "source": {
                "description": "$id of a station",
                "type": "string"
              },
              "target": {
                "description": "$id of a station",
                "type": "string"
              },
              "length": { "$ref": "#/$defs/length" }
            },
            "required": [
              "source",
              "target",
              "length"
            ]
          }
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [ "id" ],
            "properties": {
              "name": { "type": "string" },
              "id": { "$ref": "#/$defs/id" },
              "start": { "$ref": "#/$defs/mileage" },
              "end": { "$ref": "#/$defs/mileage" },
              "mileage_jump": { "type": "null" },
              "locations": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "station ID"
                }
              }
            }
          }
        }
      }
    },
    "network": {
      "type": "object",
      "title": "The Network Layer",
      "description": "junctions, tracks & usage",
      "required": [ "junctions" ],
      "properties": {
        "name": { "type": "string" },
        "id": { "$ref": "#/$defs/id" },
        "junctions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [ "id" ],
            "properties": {
              "id": { "$ref": "#/$defs/id" },
              "base_ref": { "$ref": "#/$defs/base_reference" },
              "in": { "$ref": "#/$defs/network_node" },
              "out": { "$ref": "#/$defs/network_node" }
            }
          }
        },
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [ "id", "source", "target", "type" ],
            "properties": {
              "id": { "$ref": "#/$defs/id" },
              "source": {
                "$ref": "#/$defs/id",
                "description": "element ID"
              },
              "target": {
                "$ref": "#/$defs/id",
                "description": "element ID"
              },
              "type": {
                "type": "string",
                "enum": [ "passage", "site" ]
              }
            }
          }
        }
      }
    },
    "physical": {
      "title": "physical layer",
      "type": "object",
      "description": "microscopic connections & topology",
      "properties": {
        "id": { "$ref": "#/$defs/id" },
        "elements": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [ "name", "class", "kind" ],
            "properties": {
              "name": { "type": "string" },
              "base_ref": { "$ref": "#/$defs/base_reference" },
              "network_ref": { "$ref": "#/$defs/network_reference" },
              "id": { "$ref": "#/$defs/id" },
              "pos": { "$ref": "#/$defs/line_position" },
              "class": { 
                "type": "string",
                "enum": [ "berth", "sign", "branching", "trap", "detector", "end" ]
              },
              "specimen": { "type": "string" }
            },
            "allOf": [
              {
                "if": {  "properties": { "class": { "const": "berth" } } },
                "then": {
                  "properties": {
                    "kind": { "type": "string", "enum": ["end platform", "end usable length"] },
                    "direction": { "$ref": "#/$defs/direction" }
                  }
                }
              }, {
                "if": { "properties": { "class": { "const": "sign" } } },
                "then": {
                  "properties": {
                    "kind": { "type": "string", "enum": ["board", "signal"] },
                    "direction": { "$ref": "#/$defs/direction" }
                  }
                }
              }, {
                "if": { "properties": { "class": { "const": "trap" } } },
                "then": {
                  "properties": {
                    "kind": { "type": "string", "enum": ["derailer", "points"] },
                    "direction": { "$ref": "#/$defs/direction" }
                  }
                }
              }, {
                "if": { "properties": { "class": { "const": "branching" } } },
                "then": {
                  "properties": {
                    "kind": { "type": "string", "enum": ["turnout", "slip turnout", "diamond crossing"] },
                    "branches": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "path" 
                        ],
                        "properties": {
                          "name": { "$ref": "#/$defs/switch_branches" },
                          "path": {
                            "type": "array",
                            "maxItems" : 2,
                            "minItems" : 2,
                            "items": {
                              "$ref": "#/$defs/id",
                              "description": "tracksection ID"
                            }
                          },
                          "speed": { "$ref": "#/$defs/velocity" }
                        }
                      }
                    }
                  }
                }
              }, {
                "if": { "properties": { "class": { "const": "detector" } } },
                "then": {
                  "properties": {
                    "kind": { "type": "string", "enum": ["clearing point", "balise"] },
                    "direction": { "$ref": "#/$defs/direction" }
                  }
                }
              }, {
                "if": {  "properties": { "class": { "const": "end" } } },
                "then": {
                  "properties": {
                    "kind": { "type": "string", "enum": ["buffer stop", "continuing"] }
                  }
                }
              }
            ]
          }
        },
        "segments": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [ "id", "source", "target" ],
            "properties": {
              "name": { "type": "string" },
              "id": { "$ref": "#/$defs/id" },
              "length": { "$ref": "#/$defs/length" },
              "base_ref": { "$ref": "#/$defs/base_reference" },
              "source": {
                "$ref": "#/$defs/id",
                "description": "element ID"
              },
              "target": {
                "$ref": "#/$defs/id",
                "description": "element ID"
              }
            }
          }
        }
       }
    },
    "speed": {
      "title": "speed profile layer",
      "type": "array",
      "description": "track attributes & running time estimation",
      "items": {
        "type": "object",
        "anyOf": [
          {"required": [ "id", "start", "end",  "allowance"] },
          {"required": [ "id", "start", "end", "gradient_changes"] },
          {"required": [ "id", "start", "end", "radius_changes"] }
        ],
        "properties": {
          "name": { "type": "string" },
          "line": { "type": "string" },
          "track": { "type": "string" },
          "start": { "type": "number" },
          "end": { "type": "number" },
          "direction": { "$ref": "#/$defs/direction" },
          "id": { "$ref": "#/$defs/id" },
          "path": {
            "type": "array",
            "items": { "$ref": "#/$defs/network_reference" }
          },
          "allowance": {
            "type": "array",
            "default": [],
            "title": "The allowance Schema",
            "minItems" : 1,
            "items": {
              "type": "object",
              "title": "A Schema",
              "required": [ "pos", "vMax" ],
              "properties": {
                "pos": { "$ref": "#/$defs/line_position" },
                "vMax": { "$ref": "#/$defs/velocity" }
              }
            }
          },
          "gradient_changes": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [ "pos", "slope", "elevation" ],
              "properties": {
                "pos": { "$ref": "#/$defs/line_position" },
                "slope": {
                  "type": "number",
                  "default": 0.0,
                  "description": "in permil (‰)"
                },
                "elevation": {
                  "type": "number",
                  "default": 0.0
                },
                "length": {
                  "type": "number",
                  "description": "length of the radius of curvature"
                },
                "radius": { "type": "number" }
              }
            }
          },
          "radius_changes": {
            "type": "array",
            "default": [],
            "title": "The radius_changes Schema",
            "minItems" : 1,
            "items": {
              "type": "object",
              "title": "A Schema",
              "required": [ "pos", "class" ],
              "properties": {
                "pos": { "$ref": "#/$defs/line_position" },
                "class": {
                  "type": "string",
                  "enum": [ "const", "varying" ]
                }
              },
              "allOf": [
                {
                  "if": {  "properties": { "class": { "const": "const" } } },
                  "then": {
                    "properties": {
                      "radius": {
                        "type": "number",
                        "default": ".Inf",
                        "description": "positive -> left curvature / negative -> right curvature"
                      }
                    }
                  }
                },
                {
                  "if": {  "properties": { "class": { "const": "varying" } } },
                  "then": {
                    "properties": {
                      "type": {
                        "type": "string",
                        "default": "linear"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "interlocking": {
      "title": "interlocking layer",
      "description": "signalling & safety",
      "type": "array",
      "items": {
        "type": "object",
        "required": [ "physical_ref", "network_ref", "breaking_distance", "overlaps", "routes" ],
        "properties": {
          "entrance_name": { "type": "string" },
          "physical_ref": { "$ref": "#/$defs/physical_reference" },
          "network_ref": { "$ref": "#/$defs/network_reference" },
          "breaking_distance": { "$ref": "#/$defs/mileage" },
          "overlaps": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "A Schema",
              "required": [ "id", "end" ],
              "properties": {
                "id": {
                  "$ref": "#/$defs/id",
                  "default": "main",
                  "description": "id for the overlap to select"
                },
                "end": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [ "physical_ref" ],
                    "properties": {
                      "name": { "$ref": "#/$defs/name" },
                      "physical_ref": { "$ref": "#/$defs/physical_reference" }
                    }
                  }
                },
                "en_route": {
                  "type": "array",
                  "title": "The en_route Schema",
                  "items": {
                    "type": "object",
                    "title": "A Schema",
                    "required": [
                      "physical_ref",
                      "branch"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "The name Schema"
                      },
                      "physical_ref": { "$ref": "#/$defs/physical_reference" },
                      "branch": {
                        "type": "string"
                      }
                    }
                  }
                },
                "flankprotection": {
                  "type": "object",
                  "title": "The flankprotection Schema",
                  "anyOf": [
                    {"required": [ "turnouts" ] },
                    {"required": [ "signals" ] }
                  ],
                  "properties": {
                    "turnouts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "A Schema",
                        "required": [ "physical_ref", "branches" ],
                        "properties": {
                          "name": { "$ref": "#/$defs/name" },
                          "physical_ref": { "$ref": "#/$defs/physical_reference" },
                          "branches": {
                            "type": "array",
                            "items": { "type": "string" }
                          }
                        }
                      }
                    },
                    "signals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [ "physical_ref" ],
                        "properties": {
                          "name": { "$ref": "#/$defs/name" },
                          "physical_ref": { "$ref": "#/$defs/physical_reference" }
                        }
                      }
                    }
                  }
                },
                "speed_restriction": { "$ref": "#/$defs/velocity" }
              }
            }
          },
          "routes": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "A Schema",
              "required": [ "id", "target", "en_route", "flankprotection", "route_clearing" ],
              "properties": {
                "id": {
                  "$ref": "#/$defs/id",
                  "default": "main",
                  "description": "id for the route to select"
                },
                "target": { "$ref": "#/$defs/network_reference" },
                "en_route": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [ "physical_ref", "branch" ],
                    "properties": {
                      "name": { "$ref": "#/$defs/name" },
                      "physical_ref": { "$ref": "#/$defs/physical_reference" },
                      "branch": { "$ref": "#/$defs/switch_branches" }
                    }
                  }
                },
                "flankprotection": {
                  "type": "object",
                  "anyOf": [
                    {"required": [ "turnouts" ] },
                    {"required": [ "signals" ] }
                  ],
                  "properties": {
                    "turnouts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "A Schema",
                        "required": [ "physical_ref", "branches" ],
                        "properties": {
                          "name": { "$ref": "#/$defs/name" },
                          "physical_ref": { "$ref": "#/$defs/physical_reference" },
                          "branches": {
                            "type": "array",
                            "items": { "$ref": "#/$defs/switch_branches" }
                          }
                        }
                      }
                    },
                    "signals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [ "physical_ref" ],
                        "properties": {
                          "name": { "$ref": "#/$defs/name" },
                          "physical_ref": { "$ref": "#/$defs/physical_reference" }
                        }
                      }
                    }
                  }
                },
                "route_clearing": {
                  "type": "object",
                  "required": [ "physical_ref" ],
                  "properties": {
                    "name": { "$ref": "#/$defs/name" },
                    "physical_ref": { "$ref": "#/$defs/physical_reference" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "resource": {
      "type": "object",
      "anyOf": [
        {"required": [ "sites" ] },
        {"required": [ "passages" ] }
      ],
      "properties": {
        "sites": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [ "id", "base_ref", "sets", "tracks" ],
            "properties": {
              "id": { "$ref": "#/$defs/id" },
              "name": { "type": "string" },
              "base_ref": { "$ref": "#/$defs/base_reference" },
              "sets": {
                "type": "array",
                "description": "arrays of arrays of track id's",
                "items": {
                  "type": "array",
                  "items": { "$ref": "#/$defs/id" }
                }
              },
              "tracks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [ "id", "line", "line_track", "segments" ],
                  "properties": {
                    "id": { "$ref": "#/$defs/id" },
                    "line": { "type": "string" },
                    "line_track": { "type": "string" },
                    "segments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [ "physical_ref", "berth", "clearing_distance" ],
                        "properties": {
                          "physical_ref": {
                            "type": "array",
                            "items": { "$ref": "#/$defs/physical_reference" }
                          },
                          "berth": {
                            "type": "object",
                            "title": "The berth Schema",
                            "anyOf": [
                              {"required": [ "forward" ] },
                              {"required": [ "backward" ] }
                            ],
                            "properties": {
                              "forward": { "$ref": "#/$defs/berth" },
                              "backward": { "$ref": "#/$defs/berth" }
                            }
                          },
                          "breaking_distance": { "$ref": "#/$defs/mileage" },
                          "clearing_distance": { "$ref": "#/$defs/mileage" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "passages": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [ "id", "base_ref", "tracks" ],
            "properties": {
              "id": { "$ref": "#/$defs/id" },
              "name": { "type": "string" },
              "base_ref": { "$ref": "#/$defs/base_reference" },
              "tracks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "A Schema",
                  "required": [ "id", "line", "line_track", "segments" ],
                  "properties": {
                    "id": { "$ref": "#/$defs/id" },
                    "line": { "type": "string" },
                    "line_track": { "type": "string" },
                    "segments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [ "physical_ref", "breaking_distance", "clearing_distance" ],
                        "properties": {
                          "physical_ref": {
                            "type": "array",
                            "items": { "$ref": "#/$defs/physical_reference" }
                          },
                          "breaking_distance": { "$ref": "#/$defs/mileage" },
                          "clearing_distance": { "$ref": "#/$defs/mileage" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
